# 1.
Given these declarations:

  int oats;
  int *wheat;
  int **barley;

What is the type of the expressions below?  If they are invalid, say so.

  &oats
  *wheat
  *oats
  **barley
  &wheat
  *barley
  **wheat

(string) ---
address of integer. 
integer pointer.
invalid, oats is a integer not a pointer.
pointer to integer pointer.
address of pointer wheat.
pointer to integer.
pointer to integer pointer wheat

# 2.
Given the same declarations:

  int oats;
  int *wheat;
  int **barley;

Which of the following statements are legal?

  oats = 5;
  barley = &oats;
  *wheat = 5;
  barley = &wheat;

first, third, fourth

# 3.
Given the declarations below:

  const int rice;
  const int* maize;
  const int const *millet; 

Which of the following are legal?

  rice = 5;
  maize = &rice;
  *maize = 5;
  millet = &rice;
  int * const quinoa = &rice;

(string) ---
first, second, fourth, fifth
# 4.
What happens if I execute the code below? (Try it if you're not sure!)
  int rye = 5;
  int* rye_p = NULL;
  *rye_p = rye;

(string) ---
Segmentation fault.

# 5.
What questions do you have about the material in this chapter?
(string) ---
When is a good practice to use pointers?

# 6.
What concepts would you most like to review in class?
(string) ---
double pointers, deferencing.

